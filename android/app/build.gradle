apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")
}

/**
 * Set this to true to Create the bundle tasks that will process your index.js
 */
def enableHermes = project.ext.react.get("hermesEnabled", true)

/**
 * Arquitecturas a compilar: ARM de 32 y 64 bits, y x86 de 32 y 64 bits
 */
def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "arm64-v8a", "x86", "x86_64"]
}

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.alacenainteligente"
    defaultConfig {
        applicationId "com.alacenainteligente"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", "false"
        ndk {
            abiFilters (*reactNativeArchitectures())
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

// Definir una variable constante para la versión de Flipper
def FLIPPER_VERSION = "0.201.0"

dependencies {
    // La versión de react-native es establecida por el React Native Gradle Plugin
    implementation "com.facebook.react:react-android"
    
    if (enableHermes) {
        implementation "com.facebook.react:hermes-android"
    } else {
        implementation "com.facebook.react:react-jsc"
    }

    // Añadir las dependencias de Flipper (solo para debug)
    debugImplementation("com.facebook.flipper:flipper:$FLIPPER_VERSION")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:$FLIPPER_VERSION") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:$FLIPPER_VERSION")
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); 
applyNativeModulesAppBuildGradle(project)